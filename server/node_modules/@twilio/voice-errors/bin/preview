#!/usr/bin/env node
'use strict';

const exec = require('../lib/exec');

async function run() {
  let originalBranch;
  let changeCount;
  try {
    originalBranch = await exec('git branch | sed -nE "s/^\\* (.+)/\\1/p"');
    changeCount = parseInt((await exec('git status -uno --porcelain=v1 2>/dev/null | wc -l')).trim(), 10);
  } catch(error) {
    console.error(error);
    process.exit(1);
  }

  if (typeof changeCount !== 'number' || changeCount !== 0) {
    console.error(new Error('Please commit your uncommitted changes, or they may be lost'));
    process.exit(1);
  }

  try {
    await exec('git branch -D preview');
    await exec('git checkout -b preview');
    await exec('npm run clean');
    await exec('npm run generate');
    await exec('git add -f dictionary.md table.md');
    await exec('git commit -m "Updating Preview branch"');
    await exec('git push -f origin preview');
  } catch (error) {
    console.error(error);
    process.exit(1);
  } finally {
    await exec(`git checkout preview`);
    await exec(`git fetch --all`);
    await exec(`git reset --hard origin/preview`);
    await exec(`git checkout ${originalBranch}`);
  }
}

run();
